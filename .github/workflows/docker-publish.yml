name: Test, Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -e .
          pip install pytest pytest-timeout pytest-cov
          pip install --force-reinstall --no-deps hnswlib

      - name: Run unit tests with coverage
        timeout-minutes: 15
        run: |
          source .venv/bin/activate
          pytest tests -v --timeout=60 --cov=. --cov-report=lcov:coverage.lcov --cov-report=xml:coverage.xml

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.python.coverage.reportPaths=coverage.xml

  build_and_publish:
    needs: test
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))

    strategy:
      matrix:
        service:
          - vecraft_operator
          - vecraft_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in with PAT
        run: |
          echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image for ${{ matrix.service }}
        run: |
          docker build \
            -f ./${{ matrix.service }}/Dockerfile \
            -t ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest
          docker tag \
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest \
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:${{ github.ref_name }}

      - name: Verify Docker image for ${{ matrix.service }}
        run: |
          docker run --rm \
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest --help

      - name: Push Docker image for ${{ matrix.service }}
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest
          docker push ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:${{ github.ref_name }}
